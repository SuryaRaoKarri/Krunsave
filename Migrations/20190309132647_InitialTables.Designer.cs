// <auto-generated />
using System;
using Krunsaveapp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Krunsave.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20190309132647_InitialTables")]
    partial class InitialTables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034");

            modelBuilder.Entity("Krunsaveapp.Model.Availablefood", b =>
                {
                    b.Property<int>("availableFoodID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("availableUnits");

                    b.Property<string>("cookedDate");

                    b.Property<string>("description");

                    b.Property<int>("discountPerUnit");

                    b.Property<string>("engName");

                    b.Property<string>("expiryDate");

                    b.Property<int>("foodTypeID");

                    b.Property<int>("pricePerUnit");

                    b.Property<int>("storeID");

                    b.Property<string>("thaiName");

                    b.Property<int>("totalUnits");

                    b.Property<string>("unitType");

                    b.HasKey("availableFoodID");

                    b.HasIndex("storeID");

                    b.ToTable("Availablefoods");
                });

            modelBuilder.Entity("Krunsaveapp.Model.Availablefoodtag", b =>
                {
                    b.Property<int>("foodTagID");

                    b.Property<int>("availableFoodID");

                    b.HasKey("foodTagID", "availableFoodID");

                    b.ToTable("availablefoodtags");
                });

            modelBuilder.Entity("Krunsaveapp.Model.Foodtag", b =>
                {
                    b.Property<int>("foodTagID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("tagName");

                    b.HasKey("foodTagID");

                    b.ToTable("Foodtags");
                });

            modelBuilder.Entity("Krunsaveapp.Model.Foodtype", b =>
                {
                    b.Property<int>("foodTypeID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("category");

                    b.HasKey("foodTypeID");

                    b.ToTable("Foodtypes");
                });

            modelBuilder.Entity("Krunsaveapp.Model.Role", b =>
                {
                    b.Property<int>("roleID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("roleName");

                    b.HasKey("roleID");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Krunsaveapp.Model.Store", b =>
                {
                    b.Property<int>("storeID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("address");

                    b.Property<string>("closeTime");

                    b.Property<string>("email");

                    b.Property<decimal>("lat");

                    b.Property<decimal>("lng");

                    b.Property<string>("managerName");

                    b.Property<string>("openTime");

                    b.Property<string>("phoneNumber");

                    b.Property<string>("storeName");

                    b.Property<int>("storeTypeID");

                    b.Property<int>("userID");

                    b.HasKey("storeID");

                    b.HasIndex("userID");

                    b.ToTable("Stores");
                });

            modelBuilder.Entity("Krunsaveapp.Model.Storetype", b =>
                {
                    b.Property<int>("storeTypeID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("category");

                    b.HasKey("storeTypeID");

                    b.ToTable("Storetypes");
                });

            modelBuilder.Entity("Krunsaveapp.Model.User", b =>
                {
                    b.Property<int>("userID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("email");

                    b.Property<byte[]>("passwordHash");

                    b.Property<byte[]>("passwordSalt");

                    b.Property<string>("phoneNumber");

                    b.Property<int>("roleID");

                    b.HasKey("userID");

                    b.HasIndex("roleID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Krunsaveapp.Model.Userview", b =>
                {
                    b.Property<int>("userViewID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("availableFoodID");

                    b.Property<int>("storeID");

                    b.Property<int>("userID");

                    b.Property<string>("viewDate");

                    b.Property<string>("viewTime");

                    b.HasKey("userViewID");

                    b.HasIndex("availableFoodID");

                    b.HasIndex("storeID");

                    b.HasIndex("userID");

                    b.ToTable("Userviews");
                });

            modelBuilder.Entity("Krunsaveapp.Model.Availablefood", b =>
                {
                    b.HasOne("Krunsaveapp.Model.Store", "store")
                        .WithMany("availablefoodID")
                        .HasForeignKey("storeID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Krunsaveapp.Model.Store", b =>
                {
                    b.HasOne("Krunsaveapp.Model.User", "user")
                        .WithMany("store")
                        .HasForeignKey("userID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Krunsaveapp.Model.User", b =>
                {
                    b.HasOne("Krunsaveapp.Model.Role", "role")
                        .WithMany("user")
                        .HasForeignKey("roleID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Krunsaveapp.Model.Userview", b =>
                {
                    b.HasOne("Krunsaveapp.Model.Availablefood", "availableFood")
                        .WithMany("userview")
                        .HasForeignKey("availableFoodID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Krunsaveapp.Model.Store", "store")
                        .WithMany("userview")
                        .HasForeignKey("storeID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Krunsaveapp.Model.User", "user")
                        .WithMany("userview")
                        .HasForeignKey("userID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
